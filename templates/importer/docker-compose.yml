version: '2'
services:
  process-importer:
    mem_limit: {{importer_mem_limit}}
    image: skalogs/process-importer:{{etl_version}}
    environment:
      ELASTICSEARCH_CLUSTERNAME: {{elasticsearch_cluster_name}}
      ELASTICSEARCH_CUSTOM_INDEX_PREFIX: {{elasticsearch_cluster_name}}
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PASSWORD: changeme
      ELASTICSEARCH_PORT: '9200'
      ELASTICSEARCH_USERNAME: elastic
      JAVA_OPTS: {{importer_java_opts}}
      KAFKA_BOOTSTRAPSERVERS: kafka:9092
      PROCESS_URL_REGISTRY: http://etl-backend:8090
      ZOOKEEPER_BOOTSTRAP_SERVERS: zookeeper:2181/kafka
      SPRING_MAIL_HOST: {{spring_mail_host}}
      SPRING_MAIL_PORT: {{spring_mail_port}}
      SPRING_MAIL_USERNAME: {{spring_mail_username}}
      SPRING_MAIL_PASSWORD: {{spring_mail_password}}
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: {{spring_mail_properties_mail_smtp_auth}}
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: {{spring_mail_properties_mail_smtp_starttls_enable}}
      bufferElasticsearch.maxElements: {{buffer_elasticsearch_max_elements}}
      bufferElasticsearch.maxSize: {{buffer_elasticsearch_max_size}}
      bufferElasticsearch.maxTime: {{buffer_elasticsearch_max_time}}
    stdin_open: true
    external_links:
    - zookeeper/zookeeper:zookeeper
    - elasticsearch/elasticsearch-client:elasticsearch
    - kafka/kafka:kafka
    - etl/etl-backend:etl-backend
    tty: true
    ports:
    - 8080:8080/tcp
    labels:
      com.prometheus.monitoring: 'true'
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      io.rancher.scheduler.affinity:host_label_soft: role_compute=true
      com.prometheus.port: '8080'
      io.rancher.container.pull_image: always
      com.prometheus.metricspath: /actuator/prometheus
  metric-importer:
    mem_limit: {{importer_mem_limit}}
    image: skalogs/metric-importer:{{etl_version}}
    environment:
      ELASTICSEARCH_CLUSTERNAME: {{elasticsearch_cluster_name}}
      ELASTICSEARCH_CUSTOM_INDEX_PREFIX: {{elasticsearch_cluster_name}}
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PASSWORD: changeme
      ELASTICSEARCH_PORT: '9200'
      ELASTICSEARCH_USERNAME: elastic
      JAVA_OPTS: {{importer_java_opts}}
      KAFKA_BOOTSTRAPSERVERS: kafka:9092
      PROCESS_URL_REGISTRY: http://etl-backend:8090
      ZOOKEEPER_BOOTSTRAP_SERVERS: zookeeper:2181/kafka
      SPRING_MAIL_HOST: {{spring_mail_host}}
      SPRING_MAIL_PORT: {{spring_mail_port}}
      SPRING_MAIL_USERNAME: {{spring_mail_username}}
      SPRING_MAIL_PASSWORD: {{spring_mail_password}}
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: {{spring_mail_properties_mail_smtp_auth}}
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: {{spring_mail_properties_mail_smtp_starttls_enable}}
      bufferElasticsearch.maxElements: {{buffer_elasticsearch_max_elements}}
      bufferElasticsearch.maxSize: {{buffer_elasticsearch_max_size}}
      bufferElasticsearch.maxTime: {{buffer_elasticsearch_max_time}}
    stdin_open: true
    external_links:
    - zookeeper/zookeeper:zookeeper
    - elasticsearch/elasticsearch-client:elasticsearch
    - kafka/kafka:kafka
    - etl/etl-backend:etl-backend
    tty: true
    ports:
    - 8081:8081/tcp
    labels:
      com.prometheus.monitoring: 'true'
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      io.rancher.scheduler.affinity:host_label_soft: role_compute=true
      com.prometheus.port: '8081'
      io.rancher.container.pull_image: always
      com.prometheus.metricspath: /actuator/prometheus
  error-importer:
    mem_limit: {{error_mem_limit}}
    image: skalogs/error-importer:{{etl_version}}
    environment:
      ELASTICSEARCH_CLUSTERNAME: {{elasticsearch_cluster_name}}
      ELASTICSEARCH_CUSTOM_INDEX_PREFIX: {{elasticsearch_cluster_name}}
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PASSWORD: changeme
      ELASTICSEARCH_PORT: '9200'
      ELASTICSEARCH_USERNAME: elastic
      JAVA_OPTS: {{error_java_opts}}
      KAFKA_BOOTSTRAPSERVERS: kafka:9092
      ZOOKEEPER_BOOTSTRAP_SERVERS: zookeeper:2181/kafka
      PROCESS_ACTIVE: {{error_active_on_startup}}
      bufferElasticsearch.maxElements: {{buffer_elasticsearch_max_elements}}
      bufferElasticsearch.maxSize: {{buffer_elasticsearch_max_size}}
      bufferElasticsearch.maxTime: {{buffer_elasticsearch_max_time}}
    stdin_open: true
    external_links:
    - zookeeper/zookeeper:zookeeper
    - elasticsearch/elasticsearch-client:elasticsearch
    - kafka/kafka:kafka
    tty: true
    ports:
    - 8085:8085/tcp
    labels:
      com.prometheus.monitoring: 'true'
      com.prometheus.port: '8085'
      io.rancher.container.pull_image: always
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      com.prometheus.metricspath: /actuator/prometheus
  retry-importer:
    mem_limit: {{retry_mem_limit}}
    image: skalogs/retry-importer:{{etl_version}}
    environment:
      ELASTICSEARCH_CLUSTERNAME: {{elasticsearch_cluster_name}}
      ELASTICSEARCH_CUSTOM_INDEX_PREFIX: {{elasticsearch_cluster_name}}
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PASSWORD: changeme
      ELASTICSEARCH_PORT: '9200'
      ELASTICSEARCH_USERNAME: elastic
      JAVA_OPTS: {{retry_java_opts}}
      KAFKA_BOOTSTRAPSERVERS: kafka:9092
      ZOOKEEPER_BOOTSTRAP_SERVERS: zookeeper:2181/kafka
      PROCESS_ACTIVE: {{retry_active_on_startup}}
      bufferElasticsearch.maxElements: {{buffer_elasticsearch_max_elements}}
      bufferElasticsearch.maxSize: {{buffer_elasticsearch_max_size}}
      bufferElasticsearch.maxTime: {{buffer_elasticsearch_max_time}}
    stdin_open: true
    external_links:
    - zookeeper/zookeeper:zookeeper
    - elasticsearch/elasticsearch-client:elasticsearch
    - kafka/kafka:kafka
    tty: true
    ports:
    - 8086:8086/tcp
    labels:
      com.prometheus.monitoring: 'true'
      com.prometheus.port: '8086'
      io.rancher.container.pull_image: always
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      com.prometheus.metricspath: /actuator/prometheus
